{"version":3,"file":"static/js/295.72cddffd.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-form\":\"ContactForm_contact-form__1+2ej\",\"buttons-bar\":\"ContactForm_buttons-bar__F9FuH\",\"disabled\":\"ContactForm_disabled__XBn+S\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacs = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const checkContactName = query => {\n    return contacs.some(\n      ({ name }) => name.toLowerCase() === query.toLowerCase()\n    );\n  };\n\n  const handleChange = e => {\n    const { name: inputName, value } = e.currentTarget;\n\n    switch (inputName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(\n          `Error: there isn't ${name} input for value ${value}. Check form markup.`\n        );\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkContactName(name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form\n      className={css['contact-form']}\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <label htmlFor={nameInputId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n\n      <label htmlFor={numberInputId}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n\n      <div className={css['buttons-bar']}>\n        <button type=\"submit\">Add contact</button>\n        <button\n          type=\"button\"\n          onClick={reset}\n          disabled={!name && !number}\n          className={!name && !number ? css.disabled : undefined}\n        >\n          Clear\n        </button>\n      </div>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\",\"btn-close\":\"Modal_btn-close__wlubt\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) onClose();\n  };\n\n  return createPortal(\n    <div className={css.overlay} onClick={handleBackdropClick}>\n      <div className={css.modal}>\n        {children}\n        <button\n          type=\"button\"\n          onClick={() => onClose()}\n          className={css['btn-close']}\n        >\n          x\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EditContactForm_wrapper__bVmYu\",\"avatar\":\"EditContactForm_avatar__xR-Z7\",\"contact-form\":\"EditContactForm_contact-form__YHbFG\",\"form-title\":\"EditContactForm_form-title__iFOas\",\"buttons-bar\":\"EditContactForm_buttons-bar__A2E3H\",\"disabled\":\"EditContactForm_disabled__N+J+O\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './EditContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport const EditContactForm = ({\n  id,\n  prevName,\n  prevNumber,\n  closeModal,\n  avatar,\n}) => {\n  const [name, setName] = useState(prevName);\n  const [number, setNumber] = useState(prevNumber);\n\n  const dispatch = useDispatch();\n\n  const contacs = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const checkContactName = query => {\n    return contacs\n      .filter(item => item.id !== id)\n      .some(({ name }) => name.toLowerCase() === query.toLowerCase());\n  };\n\n  const handleChange = e => {\n    const { name: inputName, value } = e.currentTarget;\n\n    switch (inputName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(\n          `Error: there isn't ${name} input for value ${value}. Check form markup.`\n        );\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkContactName(name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    } // we leave to user an opportunity to change name without default reset\n\n    dispatch(editContact({ id, name, number }));\n\n    reset();\n    closeModal();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <img\n        src={avatar}\n        className={css.avatar}\n        alt=\"contact's avatar\"\n        width={80}\n      />\n      <form\n        className={css['contact-form']}\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <p className={css['form-title']}>Edit contact:</p>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n\n        <div className={css['buttons-bar']}>\n          <button type=\"submit\">Save</button>\n          <button\n            type=\"button\"\n            onClick={reset}\n            disabled={!name && !number}\n            className={!name && !number ? css.disabled : undefined}\n          >\n            Clear\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEditContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  prevName: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-item\":\"ContactListItem_contact-item__o0gon\",\"avatar\":\"ContactListItem_avatar__cNInG\",\"contact-text\":\"ContactListItem_contact-text__lM+Pf\",\"contact-name\":\"ContactListItem_contact-name__cpENy\",\"buttons-bar\":\"ContactListItem_buttons-bar__kW+0p\",\"delete-btn\":\"ContactListItem_delete-btn__GM9hb\",\"edit-btn\":\"ContactListItem_edit-btn__jIf12\",\"btn-label\":\"ContactListItem_btn-label__SDiMJ\",\"disabled\":\"ContactListItem_disabled__RIGiL\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\nimport { fakeImgAPI } from 'helpers/fakeImgAPI';\nimport css from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(prevModalState => !prevModalState);\n  };\n\n  const imgPath = fakeImgAPI.getImgById(id);\n\n  return (\n    <li className={css['contact-item']}>\n      <img\n        src={imgPath}\n        className={css.avatar}\n        alt=\"random animal\"\n        width={48}\n      />\n      <p className={css['contact-text']}>\n        <span className={css['contact-name']}>{name}:</span> {number}\n      </p>\n      <div className={css['buttons-bar']}>\n        <button type=\"button\" className={css['edit-btn']} onClick={toggleModal}>\n          <span className={css['btn-label']}>Edit</span>\n        </button>\n        <button\n          className={css['delete-btn']}\n          type=\"button\"\n          onClick={() => handleDeleteContact(id)}\n        >\n          <span className={css['btn-label']}>Delete</span>\n        </button>\n      </div>\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <EditContactForm\n            id={id}\n            prevName={name}\n            prevNumber={number}\n            closeModal={toggleModal}\n            avatar={imgPath}\n          />\n        </Modal>\n      )}\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-list\":\"ContactList_contact-list__GnW-D\"};","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css['contact-list']}>\n      {visibleContacts.map(contact => {\n        const { name, number, id } = contact;\n        return <ContactListItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { update } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilterValue);\n\n  const changeFilter = e => {\n    dispatch(update(e.currentTarget.value));\n  };\n\n  return (\n    <label className={css.filter}>\n      Find contact by name\n      <input type=\"text\" value={filter} onChange={changeFilter} />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"loader-text\":\"Loader_loader-text__DZQo8\",\"icon-spin\":\"Loader_icon-spin__CrunX\"};","import { ImSpinner3 } from 'react-icons/im';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <ImSpinner3 size={16} className={css['icon-spin']} />\n      <span className={css['loader-text']}>Loading...</span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\",\"icon\":\"Error_icon__qD3vi\",\"title\":\"Error_title__WNFwj\"};","import { MdErrorOutline } from 'react-icons/md';\nimport css from './Error.module.css';\n\nexport const Error = ({ message }) => {\n  return (\n    <div className={css.error}>\n      <MdErrorOutline size={32} className={css.icon} />\n      <div className={css.text}>\n        <p className={css.title}>{message}</p>\n        <p className={css.subtitle}>\n          Something went wrong... Please try again later.\n        </p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__s7EJR\",\"inner\":\"Contacts_inner__4sMNZ\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm, ContactList, Error, Filter, Loader } from 'components';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <div className={css.wrapper}>\n        <h1 className=\"visually-hidden\">Phonebook</h1>\n        <div className={css.inner}>\n          <h2>Add new contact</h2>\n          <ContactForm />\n        </div>\n\n        <div className={css.inner}>\n          <h2>Contacts</h2>\n          <Filter />\n\n          {error && <Error message={error} />}\n          {isLoading && !error && <Loader />}\n\n          <ContactList />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","contacs","useSelector","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","inputName","value","console","log","reset","className","css","autoComplete","onSubmit","query","preventDefault","some","toast","addContact","htmlFor","type","id","pattern","title","required","onChange","onClick","disabled","undefined","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","EditContactForm","prevName","prevNumber","closeModal","avatar","src","alt","width","item","editContact","ContactListItem","isModalOpen","setIsModalOpen","toggleModal","prevModalState","imgPath","fakeImgAPI","deleteContact","handleDeleteContact","ContactList","visibleContacts","map","Filter","update","Loader","size","Error","message","fetchContacts"],"sourceRoot":""}